/* Ideas:
 * Can we automatically set spacing between components based on depth? i.e the
 * deepest is 2rem, next up is 4rem, next up after that is 8rem
 *
 * if you only have 1 level deep you have 8rem
 *
 * /

/* Variables (and defaults) */

:root {
  /* Primitives */
  --primary: oklch(0.7 0.1 159);
  --primary-content: oklch(1 0.1 159);
  --foreground: oklch(0.2931 0 0);
  --foreground-faded: oklch(0.5519 0 0);
  --background: oklch(0.9491 0 0);

  /* Spacing */
  --spacing-xs: 0.25rem;
  --spacing-sm: 0.5rem;
  --spacing-md: 1rem;
  --spacing-lg: 1.5rem;

  /* Component-specific */
  --body-spacing: 4rem;
  --button-spacing: 0.5rem 1.5rem;
  --input-spacing: 0.375rem 0.5rem;
  --paragraph-max-width: min(70ch, 100% - 4rem);
  --radius: 8px;
}

/* Layout */

*, *::before, *::after {
  box-sizing: border-box;
}

* {
  margin: 0;
}

#root, #__next {
  isolation: isolate;
}

/* Typography */

body {
  font-size: 1.25rem;
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
  font-family:
    -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial,
    sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  padding: var(--body-spacing);
}

h1:not(.unstyled),
h2:not(.unstyled),
h3:not(.unstyled),
h4:not(.unstyled),
h5:not(.unstyled),
h6:not(.unstyled) {
  color: var(--foreground);
  font-weight: 600;
  line-height: 1.2;
  margin-bottom: var(--spacing-md);
  text-wrap: balance;
  overflow-wrap: break-word;
}

p:not(.unstyled) {
  line-height: 1.6;
  margin-bottom: var(--spacing-sm);
  max-width: var(--paragraph-max-width);
  text-wrap: pretty;
  overflow-wrap: break-word;
}

a:not(.unstyled) {
  color: var(--color-primary);
  text-decoration: underline;
}

code:not(.unstyled) {
  background: var(--color-surface-raised);
  padding: 0.125rem 0.25rem;
  border-radius: var(--radius-xs);
  font-family: "Monaco", monospace;
}

/* Form elements */

input:not(.unstyled), textarea:not(.unstyled), select:not(.unstyled) {
  background: var(--input-bg);
  border: 1px solid var(--foreground-faded);
  border-radius: var(--radius);
  padding: var(--input-spacing);
  font-family: inherit;
}

.btn,
button:not(.unstyled) {
  background: var(--primary);
  color: var(--primary-content);
  border: none;
  border-radius: var(--radius);
  padding: var(--button-spacing);
  cursor: pointer;
}

input, button, textarea, select {
  font: inherit;
}

button:disabled:not(.unstyled),
input:disabled:not(.unstyled),
textarea:disabled:not(.unstyled),
select:disabled:not(.unstyled) {
  cursor: not-allowed;
  opacity: 0.6;
}

/* Accessibility */

:focus-visible {
  outline: 2px solid var(--primary, #3b82f6);
  border: 2px solid var(--primary, #3b82f6);
}

/* Tables */

table:not(.unstyled) {
  border-collapse: collapse;
  width: 100%;
}

table:not(.unstyled) th,
table:not(.unstyled) td {
  padding: var(--spacing-sm);
  border-bottom: 1px solid var(--color-border);
  text-align: left;
}

/* Images */

img:not(.unstyled),
picture:not(.unstyled),
video:not(.unstyled),
canvas:not(.unstyled),
svg:not(.unstyled) {
  display: block;
  max-width: 100%;
}

/* Utility */

.flex {
  display: flex;
  gap: var(--spacing-md);
}

.flex-col {
  flex-direction: column;
}

/* Spacing utilities - stack pattern (no margins on elements themselves) */
.space-xs > * + * {
  margin-top: var(--spacing-xs);
}

.space-sm > * + * {
  margin-top: var(--spacing-sm);
}

.space-md > * + * {
  margin-top: var(--spacing-md);
}

.space-lg > * + * {
  margin-top: var(--spacing-lg);
}

/* Gap utilities for flexbox/grid */
.gap-xs {
  gap: var(--spacing-xs);
}

.gap-sm {
  gap: var(--spacing-sm);
}

.gap-md {
  gap: var(--spacing-md);
}

.gap-lg {
  gap: var(--spacing-lg);
}

/* Layout utilities */
.fixed-right {
  position: fixed;
  top: 0;
  right: 0;
  height: 100vh;
  overflow-y: auto;
}

.w-full {
  width: 100%;
}

.min-h-20 {
  min-height: 5rem;
}

.h-screen {
  height: 100svh;
}
